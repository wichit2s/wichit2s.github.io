.. _ch-inputoutput:

**************************************************
การอ่านข้อมูลและแสดงผล
**************************************************

ตัวแปรที่ใช้
==================================================

+----------+---------------------+
| Streams  | Remark              |
+==========+=====================+
|  `cin`   | input stream        |
+----------+---------------------+
|  `cout`  | output stream       |
+----------+---------------------+
|  `cerr`  | error stream        |
+----------+---------------------+
|  `clog`  | logging stream      |
+----------+---------------------+
|  `wcin`  | wide input stream   |
+----------+---------------------+
|  `wcout` | wide output stream  |
+----------+---------------------+
|  `wcerr` | wide error stream   |
+----------+---------------------+
|  `wclog` | wide logging stream |
+----------+---------------------+

การแสดงผลผ่าน `cout`
==================================================

.. literalinclude:: code/cout.cpp
   :linenos:
   :language: cpp


การรับข้อมูลผ่าน `cin`
==================================================

.. literalinclude:: code/cin.cpp
   :linenos:
   :language: cpp


การใช้ `cin` กับ string
==================================================

.. literalinclude:: code/cinstring.cpp
   :linenos:
   :language: cpp



การใช้ `stringstream`
==================================================

.. literalinclude:: code/stringstream.cpp
   :linenos:
   :language: cpp

การแสดงผลด้วย `printf`
============================================================

คำสั่งประกาศของ `printf` 

.. code-block:: cpp

   int printf(const char *format, ... )

โดยที่ `format` เป็นข้อความที่สามารถนำค่าของตัวแปรมาแสดงผลได้ในต่ำแหน่งของ tag พิเศษ

รูปแบบของ tag พิเศษเป็นดังนี้

.. code-block:: cpp

   %[flags][width][.precision][length]specifier

โดยค่าที่ระบุไว้ใน [ ] ไม่จำเป็นต้องมีก็ได้  และแต่ละตำแหน่งมีความหมายและค่าที่เป็นไปได้ดังนี้

+-----------+-----------------+------------------------------------------------------------------+
|           | Possible Values | Meaning                                                          |
+===========+=================+==================================================================+
| flags     | `-`             | left justify                                                     |
+           +-----------------+------------------------------------------------------------------+
|           | `+`             | show `+` or `-` sign                                             |
+           +-----------------+------------------------------------------------------------------+
|           | (space)         | blank space before the value.                                    |
+           +-----------------+------------------------------------------------------------------+
|           | #               | o, x, X shows 0, 0x, 0X                                          |
+           +                 +------------------------------------------------------------------+
|           |                 | e, E, f shows decimal points.                                    |
+           +                 +------------------------------------------------------------------+
|           |                 | g, G shows decimal with trailing zeros.                          |
+-----------+-----------------+------------------------------------------------------------------+
| width     | (number)        | Number of characters for display area.                           |
+           +-----------------+------------------------------------------------------------------+
|           | `*`             | Use preceding variable's value as width.                         |
+-----------+-----------------+------------------------------------------------------------------+
| precision | (number)        | d, i, o, u, x, X - minimum number of digits with padded zeros    |
+           +                 +------------------------------------------------------------------+
|           |                 | `.` or `.0` means no character printed if the value is zero.     |
+           +                 +------------------------------------------------------------------+
|           |                 | e, E and f - number of digits after dot.                         |
+           +                 +------------------------------------------------------------------+
|           |                 | g, G - number of significant digits.                             |
+           +-----------------+------------------------------------------------------------------+
|           | `*`             | Use preceding variable's value as width.                         |
+-----------+-----------------+------------------------------------------------------------------+
| length    | h               | i, d, o, u, x, X - print as `short int` for `unsigned short int` |
+           +-----------------+------------------------------------------------------------------+
|           | l               | i, d, o, u, x, X - print as `long int` for `unsigned long int`.  |
+           +-----------------+------------------------------------------------------------------+
|           | L               | e, E, f, g, G - print as `long double`.                          |
+-----------+-----------------+------------------------------------------------------------------+
| specifier | c               | on character                                                     |
+           +-----------------+------------------------------------------------------------------+
|           | d or i          | signed decimal integer                                           |
+           +-----------------+------------------------------------------------------------------+
|           | e               | scientific notation using `e` character                          |
+           +-----------------+------------------------------------------------------------------+
|           | E               | scientific notation using `E` character                          |
+           +-----------------+------------------------------------------------------------------+
|           | f               | floating point                                                   |
+           +-----------------+------------------------------------------------------------------+
|           | g               | uses the shorterof %e or %f                                      |
+           +-----------------+------------------------------------------------------------------+
|           | G               | uses the shorterof %E or %f                                      |
+           +-----------------+------------------------------------------------------------------+
|           | o               | signed octal                                                     |
+           +-----------------+------------------------------------------------------------------+
|           | s               | string                                                           |
+           +-----------------+------------------------------------------------------------------+
|           | u               | unsigned decimal integer                                         |
+           +-----------------+------------------------------------------------------------------+
|           | x               | unsigned hexadecimal integer                                     |
+           +-----------------+------------------------------------------------------------------+
|           | X               | unsigned hexadecimal integer capital                             |
+           +-----------------+------------------------------------------------------------------+
|           | p               | pointer address                                                  |
+           +-----------------+------------------------------------------------------------------+
|           | n               | nothing                                                          |
+           +-----------------+------------------------------------------------------------------+
|           | %               | print % character                                                |
+-----------+-----------------+------------------------------------------------------------------+


.. literalinclude:: code/printf.cpp
   :linenos:
   :language: cpp


การรับข้อมูลด้วย `scanf`
============================================================

คำสั่งประกาศของ `scanf` 

.. code-block:: cpp

   int printf(const char *format, ... )

โดยที่ `format` เป็นข้อความที่สามารถนำค่าของตัวแปรมาแสดงผลได้ในต่ำแหน่งของ tag พิเศษ

รูปแบบของ tag พิเศษเป็นดังนี้

.. code-block:: cpp

   %[*][width][length]type

โดยค่าที่ระบุไว้ใน [ ] ไม่จำเป็นต้องมีก็ได้  และแต่ละตำแหน่งมีความหมายและค่าที่เป็นไปได้ดังนี้

+--------+-----------------+----------------+------------------------------------------------------------------+
|        | Possible Values | Variable Type  | Meaning                                                          |
+========+=================+================+==================================================================+
| `*`    | `*`             |                | read data but ignored                                            |
+--------+-----------------+----------------+------------------------------------------------------------------+
| width  | (number)        |                | maximum number of characters to read                             |
+--------+-----------------+----------------+------------------------------------------------------------------+
| length | h               |                | i, d, o, u, x, X - print as `short int` for `unsigned short int` |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | l               |                | i, d, o, u, x, X - print as `long int` for `unsigned long int`.  |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | L               |                | e, E, f, g, G - print as `long double`.                          |
+--------+-----------------+----------------+------------------------------------------------------------------+
| type   | c               | char *         | a single character                                               |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | d               | int *          | integer                                                          |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | e, E, f, g, G   | float *        | floating point                                                   |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | o               | int *          | integer                                                          |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | s               | char *         | unsigned integer                                                 |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | u               | unsigned int * | string of characters                                             |
+        +-----------------+----------------+------------------------------------------------------------------+
|        | x, X            | int *          | hexadecimal integer                                              |
+--------+-----------------+----------------+------------------------------------------------------------------+


.. literalinclude:: code/scanf.cpp
   :linenos:
   :language: cpp
