************************************
แนวคิด (Concepts)
************************************

นิยาม
====================================

การเขียนโปรแกรมเชิงวัตถุ (Object-Oriented Programming, OOP) 
เป็นแนวคิดเพื่อออกแบบและเขียนโปรแกรมเพื่อพัฒนาระบบโดย
มองลำดับการทำงานของระบบให้เป็นลำดับการสั่งงานระหว่าง **สิ่งของ** ที่เก็บ **ข้อมูล** และสามารถ **สั่งงาน** ได้

* สิ่งของ ใช้ทับศัพท์ว่า อ็อบเจ็กต์ (Object)
* สิ่งของ ในระบบเป็นประเภทเดียวกันได้
* เขียน class เพื่อเป็นพิมพ์เขียวของสิ่งของแต่ละประเภท
* class จะต้องระบุ **ข้อมูล** (attributes) และ **สั่งงาน** (methods)


ที่มาและความสำคัญ
====================================

ตัวอย่างการเขียนโปรแกรมเพื่อจัดการข้อมูลเกมเพื่อจัดเก็บข้อมูลพลังชีวิตและพลังโจมตีของผู้เล่น player และ ศัตรู 2 ตัว และในกรณีที่ไม่ใช้การเขียนโปรแกรมเชิงวัตถุสามารถเขียนได้ดังนี้

แบบที่ 1
------------------------------------

.. literalinclude:: codes/python/game_data_1.py
   :linenos:


แบบที่ 2
------------------------------------

.. literalinclude:: codes/python/game_data_2.py
   :linenos:

คำถามน่าคิด?
------------------------------------

* เกมซับซ้อนขึ้นทำให้มีผู้เล่นมากกว่า 1 ศัตรูมากกว่า 100 และหัวหน้ามากกว่า 10 ด่าน การเขียนแต่ละแบบจะมีผลกระทบอย่างไร?


* เกมซับซ้อนขึ้นทำให้ประเภทข้อมูลที่ต้องจัดเก็บเพิ่มและต้องเขียนฟังก์ชันเพิ่ม เช่นการเพิ่มระบบอาวุธ การป้องกัน แล้วการเขียนแต่ละแบบจะมีผลกระทบอย่างไร?


การเขียนเชิงวัตถุ
------------------------------------

.. literalinclude:: codes/python/character1.py
   :linenos:


ถ้าต้องการสร้าง __init__ อัตโนมัติสามารถใช้ dataclass ดังนี้

.. literalinclude:: codes/python/character2.py
   :linenos:
